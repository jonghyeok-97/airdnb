name: CI/CD pipeline

on:
  push:
    branches:
      - feat/#49

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Github Repo 불러오기
        uses: actions/checkout@v4

      - name: JDK 17 설치
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: 테스트 및 빌드하기
        run: |
          echo "${{ secrets.APPLICATION_TEST_PROPERTIES }}" > ./src/main/resources/application-test.yml
          chmod +x ./gradlew
          ./gradlew clean build -x test

      - name: AWS credentials 설정
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: ECR 로그인
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Docker 이미지 생성
        run: docker build -t airdnb-server .

      - name: Docker 이미지에 Tag 붙이기
        run: docker tag airdnb-server:latest ${{ steps.login-ecr.outputs.registry }}/airdnb:latest

      - name: Docker 이미지 push
        run: docker push ${{ steps.login-ecr.outputs.registry }}/airdnb:latest

      - name: SSH로 EC2 접속
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script_stop: true
          script: |
            sudo docker stop airdnb-server || true
            sudo docker rm airdnb-server || true
            sudo docker pull ${{ steps.login-ecr.outputs.registry }}/instagram-server:latest
            sudo docker run -d --name airdnb-server -p 8080:8080 ${{ steps.login-ecr.outputs.registry }}/airdnb:latest